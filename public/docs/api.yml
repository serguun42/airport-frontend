openapi: 3.0.0

info:
  description: API used in Airport Project
  version: '1.0.0'
  contact:
    name: Airport Project
    url: https://airport.serguun42.ru
  license:
    name: 'BSL-1.0'
    url: 'https://github.com/serguun42/airport-frontend'
  title: Airport API
  x-logo:
    url: '/img/wide.png'

servers:
  - description: Airport Project Production, API v1
    url: https://airport.serguun42.ru/api/v1/
  - description: Airport Project Development, API v1
    url: https://airport.localhost/api/v1/

tags:
  - name: account
    description: 'Account actions: login, check permission, etcâ€¦'
  - name: flights
    description: 'Get and modify flights'

paths:
  /account/check:
    get:
      description: Check account and permissions
      operationId: accountCheck
      tags:
        - account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                example:
                  success: true
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
  /account/signin:
    post:
      description: Sign into exsisting account
      operationId: accountSignin
      security: []
      tags:
        - account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  token:
                    type: string
                example:
                  success: true
                  token: abcdef
        '403':
          description: Passwords don't match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '406':
          description: Not acceptable payload (JSON-format usually)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
      requestBody:
        description: Logging payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPayload'
  /account/signup:
    post:
      description: Sign into exsisting account
      operationId: accountSignup
      security: []
      tags:
        - account
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
                  token:
                    type: string
                example:
                  success: true
                  token: abcdef
        '403':
          description: Passwords don't match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '406':
          description: Not acceptable payload (JSON-format usually)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '409':
          description: Duplicating user. Change nickname
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '422':
          description: Too short nickname. Try larger
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
      requestBody:
        description: Registering payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPayload'

  /flights/list:
    get:
      description: List all flights
      operationId: flightsList
      security: []
      tags:
        - flights
      parameters:
        - in: query
          name: skip
          schema:
            type: number
          required: false
          description: How many flight will be skipped
          example: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Flight'
        '404':
          description: Flights not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
  /flights/get:
    get:
      description: Get single flight
      operationId: flightsGet
      security: []
      tags:
        - flights
      parameters:
        - in: query
          name: id
          schema:
            type: string
          required: true
          description: Get flight by its ID
          example: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flight'
        '404':
          description: Flight not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '406':
          description: Not acceptable payload (JSON-format usually)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
  /flights/create:
    post:
      description: Create new flight entry
      operationId: flightCreate
      tags:
        - flights
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '406':
          description: Not acceptable payload (JSON-format usually)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
      requestBody:
        description: Logging payload
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Flight'
  /flights/edit:
    post:
      description: Edit existing flight entry
      operationId: flightEdit
      tags:
        - flights
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        '401':
          description: Not authorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '403':
          description: Forbidden. Low account permissions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Flight not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '406':
          description: Not acceptable payload (JSON-format usually)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
      requestBody:
        description: Logging payload
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                updated:
                  $ref: '#/components/schemas/Flight'
  /flights/delete:
    post:
      description: Delete existing flight entry
      operationId: flightDelete
      tags:
        - flights
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    default: true
        '403':
          description: Passwords don't match
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '404':
          description: Flight not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '406':
          description: Not acceptable payload (JSON-format usually)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
        '429':
          description: Too many requests
          content:
            text/plain:
              schema:
                type: string
                example: '429 Too Many Requests'
      requestBody:
        description: Logging payload
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string

security:
  - tokenAuth: []
  - cookieAuth: []

components:
  securitySchemes:
    tokenAuth:
      type: apiKey
      name: X-Token
      in: header
      description: Used for in-app actions
    cookieAuth:
      type: apiKey
      in: cookie
      name: session_id
      description: You can login to retrieve cookies on login-page

  schemas:
    APIError:
      type: object
      properties:
        error:
          type: boolean
          default: true
        code:
          type: number
        reason:
          type: string
      example:
        error: true
        code: 403
        reason: Some reason

    UserPayload:
      type: object
      properties:
        username:
          type: string
        password:
          type: string

    Flight:
      type: object
      properties:
        id:
          type: string
        incoming:
          type: boolean
        target_name:
          type: string
        target_iata:
          type: string
        gate:
          type: string
        flight_number:
          type: string
        plane_model:
          type: string
        departure:
          type: string
          format: datetime
        arrival:
          type: string
          format: datetime
      required:
        - incoming
        - target_name
        - target_iata
        - flight_number
